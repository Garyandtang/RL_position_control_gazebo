<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="tag_type" default="Apriltag36_11_00001"/>
  

  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltags2_ros_continuous_node" />
  <arg name="camera_name" default="/rrbot/camera1" />
  <arg name="camera_frame" default="camera" />
  <arg name="image_topic" default="image_raw" />

  <arg name="model" default="burger"/>
  <param name="model" value="$(arg model)"/>
  <!-- Set parameters -->
  <rosparam command="load" file="$(find apriltags2_ros)/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find apriltags2_ros)/config/tags.yaml" ns="$(arg node_namespace)" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rrbot_gazebo)/worlds/rrbot.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the camera holder URDF into the ROS Parameter Server -->
  <param name="rrbot_description"
    command="$(find xacro)/xacro --inorder '$(find rrbot_description)/urdf/rrbot.xacro'" />

  <!-- add rrbot (camera holder) -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model rrbot -param rrbot_description"/>

   <!-- add a differential wheeled robot -->
  <group>
	<arg name="x_pos_0" default="1.25"/>
	<arg name="y_pos_0" default="0.1"/>
	<arg name="z_pos_0" default="0.0"/>
	<param name="robot_description" command="$(find xacro)/xacro.py $(find mybot_description)/urdf/two_wheel_robot.xacro tag_index:=Apriltag36_11_00000" />
	<node name="robot_spawner_0" pkg="gazebo_ros" type="spawn_model" args="-urdf -model mybot_0 -x $(arg x_pos_0) -y $(arg y_pos_0) -z $(arg z_pos_0) -param robot_description" />
	</group>

  <!-- add second differential wheeled robot -->
  <group ns="robt1">
  <arg name="x_pos_1" default="0.54"/>
	<arg name="y_pos_1" default="0.5"/>
	<arg name="z_pos_1" default="0.0"/>
  <param name="robot_description_1" command="$(find xacro)/xacro.py $(find mybot_description)/urdf/two_wheel_robot.xacro tag_index:=Apriltag36_11_00001" />
  <node name="robot_spawner_1" pkg="gazebo_ros" type="spawn_model" args="-urdf -model mybot_1 -x $(arg x_pos_1) -y $(arg y_pos_1) -z $(arg z_pos_1) -param robot_description_1" />
  </group>

  <!-- add third differential wheeled robot -->
  <group ns="robt2">
  <arg name="x_pos_2" default="0.54"/>
	<arg name="y_pos_2" default="-0.5"/>
	<arg name="z_pos_2" default="0.0"/>
  <param name="robot_description_2" command="$(find xacro)/xacro.py $(find mybot_description)/urdf/two_wheel_robot.xacro tag_index:=Apriltag36_11_00002" />
  <node name="robot_spawner_1" pkg="gazebo_ros" type="spawn_model" args="-urdf -model mybot_2 -x $(arg x_pos_2) -y $(arg y_pos_2) -z $(arg z_pos_2) -param robot_description_2" />
  </group>

  <!--  apriltag localization -->
  <node pkg="apriltags2_ros" type="apriltags2_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    <!-- Remap topics from those used in code to those on the ROS network -->
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    <param name="publish_tag_detections_image" type="bool" value="true" />      <!-- default: false -->
  </node>

  <!-- image view -->
  <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
    <remap from="image" to="/tag_detections_image"/>
    <param name="autosize" value="false" />
  </node>

  <!-- keyboard control -->
  <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="turtlebot3_teleop_keyboard"  output="screen" launch-prefix="gnome-terminal -e">
  </node>

  <!-- rviz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find apriltags2_ros)/rviz/show_result.rviz" />

</launch>
