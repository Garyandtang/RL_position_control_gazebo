<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="tag_type" default="Apriltag36_11_00001"/>
  

  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltags2_ros_continuous_node" />
  <arg name="camera_name" default="/rrbot/camera1" />
  <arg name="camera_frame" default="camera_link" />
  <arg name="image_topic" default="image_raw" />

  <!-- Set parameters -->
  <rosparam command="load" file="$(find apriltags2_ros)/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find apriltags2_ros)/config/tags.yaml" ns="$(arg node_namespace)" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rrbot_gazebo)/worlds/rrbot.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    
  </include>

  <!-- Load the camera holder URDF into the ROS Parameter Server -->
  <param name="rrbot_description"
    command="$(find xacro)/xacro --inorder '$(find rrbot_description)/urdf/rrbot.xacro'" />

  <!-- add rrbot (camera holder) -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model rrbot -param rrbot_description"/> -->

   <!-- add a differential wheeled robot -->
  <!-- <group>
	  <arg name="x_pos_0" default="1.25"/>
	  <arg name="y_pos_0" default="0.1"/>
	  <arg name="z_pos_0" default="0.0"/>
	  <param name="robot_description" command="$(find xacro)/xacro.py $(find mybot_description)/urdf/two_wheel_robot.xacro tag_index:=Apriltag36_11_00000 ns:=robot0" />
	  <node name="robot_spawner_0" pkg="gazebo_ros" type="spawn_model" args="-urdf -model mybot_0 -x $(arg x_pos_0) -y $(arg y_pos_0) -z $(arg z_pos_0) -param robot_description" />
  </group> -->

  <!-- add a differential wheeled robot -->
  <include file="$(find rrbot_gazebo)/launch/include/mybot.launch.xml">
    <arg name="ns" value="robot1"/>
    <arg name="x_pos_0" default="1.25"/>
    <arg name="y_pos_0" default="0.1"/>
    <arg name="z_pos_0" default="0.0"/>
    <arg name="tag_index" default="Apriltag36_11_00000"/>
  </include>

  <include file="$(find rrbot_gazebo)/launch/include/mybot.launch.xml">
    <arg name="ns" value="robot2"/>
    <arg name="x_pos_0" default="2.25"/>
    <arg name="y_pos_0" default="0.1"/>
    <arg name="z_pos_0" default="0.0"/>
    <arg name="tag_index" default="Apriltag36_11_00001"/>
  </include>
  <!--  apriltag localization -->
  <!-- <node pkg="apriltags2_ros" type="apriltags2_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="camera_frame" type="str" value="$(arg camera_frame)" />
    <param name="publish_tag_detections_image" type="bool" value="true" />      
  </node> -->


  <!-- keyboard control -->
  <!-- <node pkg="turtlebot3_teleop" type="turtlebot3_teleop_key" name="turtlebot3_teleop_keyboard"  output="screen">
  </node> -->

  <!-- rviz -->
  <!-- <node type="rviz" name="rviz" pkg="rviz" args="-d $(find rrbot_gazebo)/rviz/show_result.rviz" /> -->

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="rrbot_state_publisher">
    <remap from="/robot_description" to="/rrbot_description"/>
    <remap from="/joint_states" to="/rrbot/joint_states"/>
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot0_state_publisher">
  </node>
<!-- static map -->
  <!-- <node name="map_server" pkg="map_server" type="map_server"
    args="$(find rrbot_gazebo)/map/map_param.yaml" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_map" args="0.19 1.16 0 -1.57 0 0 world map"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="world_to_odom" args="0.0 0.0 0.0 0.0 0.0 0.0 world odom"/> -->

  <!-- <include file="$(find mybot_navigation)/launch/includes/move_base.launch">
  </include> -->


</launch>
